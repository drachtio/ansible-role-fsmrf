---

- name: update apt-cache
  apt: update_cache=yes 
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name:  Debian family - install build dependencies
  apt: 
    state: latest
    name: ['curl', 'gnupg2', 'wget', 'git', 'cmake', 'automake', 'autoconf', 'libavformat-dev', 'liblua5.1-0-dev',
        'libtool', 'build-essential', 'pkg-config', 'ca-certificates', 'libssl-dev', 'lsb-release', 'systemd-coredump', 'liblz4-tool',
        'libz-dev', 'libjpeg-dev', 'libsqlite3-dev', 'libcurl4-openssl-dev', 'libpcre3-dev', 'libswscale-dev', 'php-cli',
        'libspeex-dev', 'libspeexdsp-dev', 'libedit-dev', 'libtiff-dev', 'yasm', 'haveged', 'libldns-dev', 'uuid-dev',
        'libopus-dev', 'libopusfile-dev', 'libsndfile-dev', 'libshout3-dev', 'libmpg123-dev', 'libmp3lame-dev']
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install libtool-bin
  apt: 
    name: libtool-bin 
    state: latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ignore_errors: yes          

- name: git configure
  shell: git config --global pull.rebase true

- name: check out freeswitch code
  git: repo=https://github.com/signalwire/freeswitch.git
       dest={{freeswitch_sources_path}}
       version={{freeswitch_version}}
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out spandsp
  git: repo=https://github.com/freeswitch/spandsp.git
       dest={{freeswitch_sources_path}}/libs/spandsp
       version={{spandsp_version}}
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out sofia
  git: repo=https://github.com/freeswitch/sofia-sip.git
       dest={{freeswitch_sources_path}}/libs/sofia-sip
       version={{sofia_version}}
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out libfvad
  git: 
    repo: https://github.com/dpirch/libfvad.git
    dest: "{{freeswitch_sources_path}}/libs/libfvad"
    depth: 50
    accept_hostkey: yes
    force: yes

- name: check out lws code
  git: 
    repo: https://github.com/warmcat/libwebsockets.git
    dest: "{{freeswitch_sources_path}}/libs/libwebsockets"
    version: "{{lws_version}}"
    depth: 50
    accept_hostkey: yes
    force: yes

- name: check out drachtio freeswitch modules
  git: 
    repo: https://github.com/drachtio/drachtio-freeswitch-modules.git
    dest: /usr/local/src/drachtio-freeswitch-modules
    version: main
    depth: 50
    accept_hostkey: yes
    force: yes

- name: copy mod_audio_fork into place
  shell: cp -r /usr/local/src/drachtio-freeswitch-modules/modules/mod_audio_fork {{freeswitch_sources_path}}/src/mod/applications/mod_audio_fork
  args:
    warn: False

- name: copy Makefile.am, configure.ac etc into place
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest}}"
  loop:
    - {src: "configure.ac.lws", dest: "{{freeswitch_sources_path}}/configure.ac"}
    - {src: "Makefile.am.lws", dest: "{{freeswitch_sources_path}}/Makefile.am"}
    - {src: "modules.conf.in.lws", dest: "{{freeswitch_sources_path}}/build/modules.conf.in"}
    - {src: "modules.conf.vanilla.xml.lws", dest: "{{freeswitch_sources_path}}/conf/vanilla/autoload_configs/modules.conf.xml"}

- name: patch switch_rtp.c to disable the flushing of rtp packets feature 
  patch:
    remote_src: no
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src: "switch_rtp.c.patch", dest: "{{freeswitch_sources_path}}/src/switch_rtp.c"}

- name: patch mod_spandsp_dsp.c to fix missing args in v18_init func
  patch:
    remote_src: no
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src: "mod_spandsp_dsp.c.patch", dest: "{{freeswitch_sources_path}}/src/mod/applications/mod_spandsp/mod_spandsp_dsp.c"}

- name: build libwebsockets
  shell: mkdir -p build && cd build && cmake .. && make -j 4 && make install
  args:
    chdir: "{{freeswitch_sources_path}}/libs/libwebsockets"
    warn: False

- name: build libfvad
  shell: autoreconf -i && ./configure && make -j 4 && make install
  args:
    chdir: "{{freeswitch_sources_path}}/libs/libfvad"

- name: build spandsp
  shell: ./bootstrap.sh && ./configure && make -j 4 && make install
  args:
    chdir: "{{freeswitch_sources_path}}/libs/spandsp"

- name: build sofia
  shell: ./bootstrap.sh && ./configure && make -j 4 && make install
  args:
    chdir: "{{freeswitch_sources_path}}/libs/sofia-sip"

- include_tasks: extra.yml 
  when: build_with_extra|bool

- name: bootstrap 
  shell: ./bootstrap.sh -j chdir={{freeswitch_sources_path}}

- name: Freeswitch configuration (with extra modules)
  shell: PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./{{freeswitch_configure_command}} --with-extra=yes
  args:
    chdir: "{{freeswitch_sources_path}}"
    warn: False
  when: build_with_extra|bool

- name: Freeswitch configuration (without extra modules)
  shell: PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./{{freeswitch_configure_command}}
  args:
    chdir: "{{freeswitch_sources_path}}"
    warn: False
  when: not build_with_extra|bool

- name: FreeSwitch make
  shell: make -j 4 chdir={{freeswitch_sources_path}}

- name: FreeSwitch install
  shell: make install chdir={{freeswitch_sources_path}}

- name: make sounds
  shell: cd {{freeswitch_sources_path}} && make cd-sounds-install cd-moh-install 

- name: Copy acl.conf file
  template: src=acl.conf.xml.j2 dest={{freeswitch_path}}conf/autoload_configs/acl.conf.xml owner=root group=root mode=0644

- name: Copy event_socket.conf file
  template: src=event_socket.conf.xml.j2 dest={{freeswitch_path}}conf/autoload_configs/event_socket.conf.xml owner=root group=root mode=0644

- name: Remove unused dialplans and profiles
  file: name={{freeswitch_path}}conf/{{ item }} state=absent
  with_items:
  - sip_profiles/external.xml
  - sip_profiles/external
  - sip_profiles/internal.xml
  - sip_profiles/external-ipv6.xml
  - sip_profiles/external-ipv6
  - sip_profiles/internal-ipv6.xml
  - dialplan/default.xml
  - dialplan/default
  - dialplan/features.xml
  - dialplan/public.xml
  - dialplan/public
  - dialplan/skinny-patterns.xml
  - dialplan/skinny-patterns

- name: Copy dialplan
  template: src=mrf_dialplan.xml.j2 dest={{freeswitch_path}}conf/dialplan/mrf.xml mode=0644

- name: Copy ipv4 sip profile
  template: src=mrf_sip_profile.xml.j2 dest={{freeswitch_path}}conf/sip_profiles/mrf.xml mode=0644

- name: Copy ipv6 sip profile
  template: src=mrf_ipv6_sip_profile.xml.j2 dest={{freeswitch_path}}conf/sip_profiles/mrf_ipv6.xml mode=0644
  when: 
    - hostvars[inventory_hostname]['ansible_default_ipv6']
    - hostvars[inventory_hostname]['ansible_default_ipv6']['address']

- name: change rtp-start-port
  lineinfile:
    path: /usr/local/freeswitch/conf/autoload_configs/switch.conf.xml
    regexp: 'rtp-start-port'
    line:  <param name="rtp-start-port" value="{{rtp_start_port}}"/>

- name: change rtp-end-port
  lineinfile:
    path: /usr/local/freeswitch/conf/autoload_configs/switch.conf.xml
    regexp: 'rtp-end-port'
    line:  <param name="rtp-end-port" value="{{rtp_end_port}}"/>

- name: reorder codecs so PCMU is first and no video
  lineinfile:
    path: /usr/local/freeswitch/conf/vars.xml
    regexp: 'global_codec_prefs=OPUS,G722,PCMU,PCMA,H264,VP'
    line: <X-PRE-PROCESS cmd="set" data="global_codec_prefs=PCMU,PCMA,OPUS,G722"/>

- name: reorder codecs so PCMU is first and no video
  lineinfile:
    path: /usr/local/freeswitch/conf/vars.xml
    regexp: 'outbound_codec_prefs=OPUS,G722,PCMU,PCMA,H264,VP8'
    line:  <X-PRE-PROCESS cmd="set" data="outbound_codec_prefs=PCMU,PCMA,OPUS,G722"/>

- name: set-exec public IPs (aws)
  lineinfile:
    path: /usr/local/freeswitch/conf/vars.xml
    regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
    line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl -s http://169.254.169.254/latest/meta-data/public-ipv4"/>
  when: cloud_provider == 'aws'

- name: set-exec public IPs (gcp)
  lineinfile:
    path: /usr/local/freeswitch/conf/vars.xml
    regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
    line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl -s -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip"/>
  when: cloud_provider == 'gcp'

- name: set-exec public IPs (azure)
  lineinfile:
    path: /usr/local/freeswitch/conf/vars.xml
    regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
    line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl -H Metadata:true http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01&format=text"/>
  when: cloud_provider == 'azure'

- name: set-exec public IPs (digital_ocean)
  lineinfile:
    path: /usr/local/freeswitch/conf/vars.xml
    regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
    line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/address"/>
  when: cloud_provider == 'digital_ocean'

- name: bind rtp to cloud IPs
  lineinfile:
    path: /usr/local/freeswitch/conf/sip_profiles/mrf.xml
    regexp: 'ext-rtp-ip'
    line: <param name="ext-rtp-ip" value="$${external_rtp_ip}"/>
  when: cloud_provider != 'none'

- name: unmask freeswitch service
  shell: systemctl unmask freeswitch

- name: install freeswitch.service
  template: src=freeswitch.service.j2 dest=/etc/systemd/system/freeswitch.service

- name: reload systemctl
  shell: systemctl daemon-reload

- name: enable freeswitch service
  service: name=freeswitch state=restarted

- name: log files management
  template: src=freeswitch_log_rotation.j2 dest=/etc/cron.daily/freeswitch_log_rotation

- file: path=/etc/cron.daily/freeswitch_log_rotation mode="a+x"

- name: remove source code
  file: 
    path: "{{ item }}"
    state: absent
  with_items:
    - /usr/local/src/freeswitch
    - /usr/local/src/drachtio-freeswitch-modules
    - /usr/local/src/grpc
    - /usr/local/src/
  when: remove_source|bool
